{"ast":null,"code":"var _jsxFileName = \"/Users/agusespa/Programming/Books & Tutorials/Fi Mooc/phonebook-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PersonForm from './components/PersonForm';\nimport ContactList from './components/ContactList';\nimport personService from './services/persons';\nimport Notification from './components/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [contactName, setContactName] = useState('');\n  const [message, setMessage] = useState(null);\n  useEffect(() => {\n    personService.getAll().then(initialPersons => {\n      setPersons(initialPersons);\n    }).catch(error => {\n      setMessage(\"Can't retrive contacts from database\");\n      setTimeout(() => {\n        setMessage(null);\n      }, 5000);\n    });\n  }, []);\n\n  const updatePerson = () => {\n    const personId = persons[persons.findIndex(person => person.name === newName)].id;\n    const personObject = {\n      name: newName,\n      number: newNumber\n    };\n    personService.change(personId, personObject).then(returnedPerson => {\n      setPersons(persons.filter(person => persons.indexOf(person) !== persons.findIndex(person => person.name === newName && person.number !== newNumber)).concat(returnedPerson)).catch(error => {\n        setMessage(`Can't update ${newName}`);\n        setTimeout(() => {\n          setMessage(null);\n        }, 3000);\n      });\n    });\n  };\n\n  const addPerson = event => {\n    event.preventDefault();\n\n    if (persons.map(person => person.name).includes(newName)) {\n      if (window.confirm(`${newName} is already added to phonebook. Do you want to change the number?`)) {\n        updatePerson();\n        setMessage(`Updated ${newName} successfully`);\n        setTimeout(() => {\n          setMessage(null);\n        }, 3000);\n        setNewName('');\n        setNewNumber('');\n      } else {\n        setNewName('');\n      }\n    } else {\n      const personObject = {\n        name: newName,\n        number: newNumber\n      };\n      personService.create(personObject).then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson));\n        setMessage(`Added ${newName} successfully`);\n        setTimeout(() => {\n          setMessage(null);\n        }, 3000);\n        setNewName('');\n        setNewNumber('');\n      });\n    }\n  };\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleContactNameChange = event => {\n    setContactName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Notification, {\n      message: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add new contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonForm, {\n      function: addPerson,\n      name: newName,\n      nameHandler: handleNameChange,\n      number: newNumber,\n      numberHandler: handleNumberChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n      action: setContactName,\n      name: contactName,\n      nameHandler: handleContactNameChange,\n      persons: persons,\n      setPersons: setPersons,\n      setMessage: setMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"gt7oMRZo6uuTUAxsIPuit7+sQCg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/agusespa/Programming/Books & Tutorials/Fi Mooc/phonebook-app/src/App.js"],"names":["React","useState","useEffect","PersonForm","ContactList","personService","Notification","App","persons","setPersons","newName","setNewName","newNumber","setNewNumber","contactName","setContactName","message","setMessage","getAll","then","initialPersons","catch","error","setTimeout","updatePerson","personId","findIndex","person","name","id","personObject","number","change","returnedPerson","filter","indexOf","concat","addPerson","event","preventDefault","map","includes","window","confirm","create","handleNameChange","target","value","handleContactNameChange","handleNumberChange"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PersonForm from './components/PersonForm';\nimport ContactList from './components/ContactList';\nimport personService from './services/persons';\nimport Notification from './components/Notification';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [contactName, setContactName] = useState('');\n  const [message, setMessage] = useState(null);\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n      .catch(error => {\n        setMessage(\"Can't retrive contacts from database\");\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000);\n      })\n  }, []);\n\n  const updatePerson = () => {\n    const personId = persons[persons.findIndex(person => person.name === newName)].id;\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    }\n    personService\n      .change(personId, personObject)\n      .then((returnedPerson) => {\n        setPersons(\n          persons\n            .filter(person => \n              persons.indexOf(person) !== persons.findIndex(person => person.name === newName && person.number !== newNumber))\n            .concat(returnedPerson))\n      .catch(error => {\n        setMessage(`Can't update ${newName}`);\n        setTimeout(() => {\n          setMessage(null)\n        }, 3000);\n      });\n    });\n  }\n\n  const addPerson = (event) => {\n\t\tevent.preventDefault();\n\t\n\t\tif (persons.map(person => person.name).includes(newName)) {\n      if (window.confirm(`${newName} is already added to phonebook. Do you want to change the number?`)) {\n        updatePerson();\n        setMessage(`Updated ${newName} successfully`);\n        setTimeout(() => {\n          setMessage(null)\n        }, 3000);\n        setNewName('');\n        setNewNumber('');\n      } else {\n        setNewName('');\n      }\n\t\t} else {\n\t\t  const personObject = {\n\t\t\t  name: newName,\n\t\t\t  number: newNumber,\n\t\t  }\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson));\n          setMessage(`Added ${newName} successfully`);\n          setTimeout(() => {\n            setMessage(null)\n          }, 3000);\n          setNewName('');\n          setNewNumber('');\n      });\n\t\t}\n\t}\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  }\n\n  const handleContactNameChange = (event) => {\n    setContactName(event.target.value);\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  }\n\n  return (\n    <div>\n\n      <Notification message={message} />\n\n      <h2>Phonebook</h2>\n\n      <h3>Add new contact</h3>\n      <PersonForm \n        function={addPerson} \n        name={newName} \n        nameHandler={handleNameChange}\n        number={newNumber}\n        numberHandler={handleNumberChange}\n      />\n      \n      <h3>Contacts</h3>\n      <ContactList \n        action={setContactName}\n        name={contactName}\n        nameHandler={handleContactNameChange}\n        persons={persons}\n        setPersons={setPersons}\n        setMessage={setMessage}\n      />\n\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}