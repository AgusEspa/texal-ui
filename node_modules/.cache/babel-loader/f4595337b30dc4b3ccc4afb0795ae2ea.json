{"ast":null,"code":"var _jsxFileName = \"/Users/agusespa/Programming/Books & Tutorials/Fi Mooc/phonebook-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PersonForm from './components/PersonForm';\nimport ContactList from './components/ContactList';\nimport personService from './services/persons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [contactName, setContactName] = useState('');\n  useEffect(() => {\n    personService.getAll().then(initialPersons => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  const addPerson = event => {\n    event.preventDefault();\n\n    if (persons.map(person => person.name).includes(newName)) {\n      if (window.confirm(`${newName} is already added to phonebook. Do you want to change the number?`)) {\n        personService.change(person.id, newNumber).then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson));\n          setNewName('');\n          setNewNumber('');\n        });\n      } else {\n        setNewName('');\n        setNewNumber('');\n      }\n    } else {\n      const personObject = {\n        name: newName,\n        number: newNumber\n      };\n      personService.create(personObject).then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson));\n        setNewName('');\n        setNewNumber('');\n      });\n    }\n  };\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleContactNameChange = event => {\n    setContactName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add new contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonForm, {\n      function: addPerson,\n      name: newName,\n      nameHandler: handleNameChange,\n      number: newNumber,\n      numberHandler: handleNumberChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n      action: setContactName,\n      name: contactName,\n      nameHandler: handleContactNameChange,\n      persons: persons,\n      setPersons: setPersons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"+hDYo+1mPPQUMkMfaE0fmFgdVLk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/agusespa/Programming/Books & Tutorials/Fi Mooc/phonebook-app/src/App.js"],"names":["React","useState","useEffect","PersonForm","ContactList","personService","App","persons","setPersons","newName","setNewName","newNumber","setNewNumber","contactName","setContactName","getAll","then","initialPersons","addPerson","event","preventDefault","map","person","name","includes","window","confirm","change","id","returnedPerson","concat","personObject","number","create","handleNameChange","target","value","handleContactNameChange","handleNumberChange"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,EAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,aAAa,CACVU,MADH,GAEGC,IAFH,CAEQC,cAAc,IAAI;AACtBT,MAAAA,UAAU,CAACS,cAAD,CAAV;AACD,KAJH;AAKD,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMC,SAAS,GAAIC,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAIb,OAAO,CAACc,GAAR,CAAYC,MAAM,IAAIA,MAAM,CAACC,IAA7B,EAAmCC,QAAnC,CAA4Cf,OAA5C,CAAJ,EAA0D;AACtD,UAAIgB,MAAM,CAACC,OAAP,CAAgB,GAAEjB,OAAQ,mEAA1B,CAAJ,EAAmG;AACjGJ,QAAAA,aAAa,CACVsB,MADH,CACUL,MAAM,CAACM,EADjB,EACqBjB,SADrB,EAEGK,IAFH,CAEQa,cAAc,IAAI;AACtBrB,UAAAA,UAAU,CAACD,OAAO,CAACuB,MAAR,CAAeD,cAAf,CAAD,CAAV;AACAnB,UAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,UAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,SANH;AAOD,OARD,MAQO;AACLF,QAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,QAAAA,YAAY,CAAC,EAAD,CAAZ;AACD;AACJ,KAbD,MAaO;AACL,YAAMmB,YAAY,GAAG;AACpBR,QAAAA,IAAI,EAAEd,OADc;AAEpBuB,QAAAA,MAAM,EAAErB;AAFY,OAArB;AAIEN,MAAAA,aAAa,CACV4B,MADH,CACUF,YADV,EAEGf,IAFH,CAEQa,cAAc,IAAI;AACtBrB,QAAAA,UAAU,CAACD,OAAO,CAACuB,MAAR,CAAeD,cAAf,CAAD,CAAV;AACAnB,QAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,QAAAA,YAAY,CAAC,EAAD,CAAZ;AACH,OAND;AAOH;AACD,GA7BA;;AA+BA,QAAMsB,gBAAgB,GAAIf,KAAD,IAAW;AAClCT,IAAAA,UAAU,CAACS,KAAK,CAACgB,MAAN,CAAaC,KAAd,CAAV;AACD,GAFD;;AAIA,QAAMC,uBAAuB,GAAIlB,KAAD,IAAW;AACzCL,IAAAA,cAAc,CAACK,KAAK,CAACgB,MAAN,CAAaC,KAAd,CAAd;AACD,GAFD;;AAIA,QAAME,kBAAkB,GAAInB,KAAD,IAAW;AACpCP,IAAAA,YAAY,CAACO,KAAK,CAACgB,MAAN,CAAaC,KAAd,CAAZ;AACD,GAFD;;AAIA,sBACE;AAAA,4BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,UAAD;AACE,MAAA,QAAQ,EAAElB,SADZ;AAEE,MAAA,IAAI,EAAET,OAFR;AAGE,MAAA,WAAW,EAAEyB,gBAHf;AAIE,MAAA,MAAM,EAAEvB,SAJV;AAKE,MAAA,aAAa,EAAE2B;AALjB;AAAA;AAAA;AAAA;AAAA,YALF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,eAcE,QAAC,WAAD;AACE,MAAA,MAAM,EAAExB,cADV;AAEE,MAAA,IAAI,EAAED,WAFR;AAGE,MAAA,WAAW,EAAEwB,uBAHf;AAIE,MAAA,OAAO,EAAE9B,OAJX;AAKE,MAAA,UAAU,EAAEC;AALd;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CAlFD;;GAAMF,G;;KAAAA,G;AAoFN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PersonForm from './components/PersonForm';\nimport ContactList from './components/ContactList';\nimport personService from './services/persons';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [contactName, setContactName] = useState('');\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      });\n  }, []);\n\n  const addPerson = (event) => {\n\t\tevent.preventDefault();\n\t\n\t\tif (persons.map(person => person.name).includes(newName)) {\n      if (window.confirm(`${newName} is already added to phonebook. Do you want to change the number?`)) {\n        personService\n          .change(person.id, newNumber)\n          .then(returnedPerson => {\n            setPersons(persons.concat(returnedPerson));\n            setNewName('');\n            setNewNumber('');\n          })\n      } else {\n        setNewName('');\n        setNewNumber('');\n      }\n\t\t} else {\n\t\t  const personObject = {\n\t\t\t  name: newName,\n\t\t\t  number: newNumber,\n\t\t  }\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson));\n          setNewName('');\n          setNewNumber('');\n      });\n\t\t}\n\t}\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  }\n\n  const handleContactNameChange = (event) => {\n    setContactName(event.target.value);\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  }\n\n  return (\n    <div>\n\n      <h2>Phonebook</h2>\n\n      <h3>Add new contact</h3>\n      <PersonForm \n        function={addPerson} \n        name={newName} \n        nameHandler={handleNameChange}\n        number={newNumber}\n        numberHandler={handleNumberChange}\n      />\n      \n      <h3>Contacts</h3>\n      <ContactList \n        action={setContactName}\n        name={contactName}\n        nameHandler={handleContactNameChange}\n        persons={persons}\n        setPersons={setPersons}\n      />\n\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}